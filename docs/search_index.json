[["index.html", "Stanford Spring 2025 Intro to Computational Social Science About", " Stanford Spring 2025 Intro to Computational Social Science Yuze Sui 2025-03-31 About Figure Source: Katie Pacyna With an ever-growing amount of data collected on our online and offline behaviors—from our purchasing habits to our social interactions—we now have the unprecedented opportunity to study social life with remarkable precision. This hands-on course explores the promises and pitfalls of leveraging “big data” and algorithms to understand modern social and economic systems. Each week, we will examine key sociological topics such as inequality, discrimination, and polarization through the lens of computational methods, as well as delve into cutting-edge techniques in computational social science. The course culminates in a group research project that will equip you with skills ranging from designing and executing large-scale surveys and experiments to fitting machine learning models and analyzing diverse data types like social networks and natural language. No prior statistical or programming experience is required. This website is the place where you can find R progamming lab notes for the course. "],["intro-to-r.html", "Week 1 Intro to R 1.1 R Basics 1.2 Vectors 1.3 Loading Packages 1.4 Exploring and Visualizing Data", " Week 1 Intro to R This section is drafted based on Dr. Mark Hoffman’s previous SOC 10 lab notes. 1.1 R Basics This initial tutorial for R has two primary learning objectives. The first is to become affiliated with the R environment and the second is to learn how to extend the basic set of R functions to make it suitable for your own research purposes. The lessons we learn in this tutorial will serve as a strong basis for the those that follow, which focus on the actual analysis of data using R. Like most programming languages, R can serve as a calculator. We will use many of these basic mathematical operations when working with data. Let’s start with the basics: 2 + 2 return: [1] 4 3*(2+2) return: [1] 12 We use the assignment operator “&lt;-” to save the results in a vector for later. four &lt;- 2+2 sixteen &lt;- (2+2)^2 If we type the name of the vector, it will return its values. four return: [1] 4 Functions in R also have names. Functions save lines of codes! Later on, we will learn to write our own functions. For now, we can make use of the large body of default functions that exist within R. The most basic function is print. We can use it to output text in the console. print(&quot;Hello world!&quot;) return: [1] &quot;Hello world!&quot; log() is another useful function and it has two arguments, x and base. When you call the function log() you have to specify x (the input value), while base has a default of exp(1). log82 &lt;- log(x = 8, base = 2) If you don’t specify the arguments in their correct order, you must use argument=value form or else you will get a different result. log1 &lt;- log(8, base = 2) log2 &lt;- log(x = 8, base = 2) log3 &lt;- log(8, 2) log4 &lt;- log(base = 2, x = 8) log5 &lt;- log(2, 8) The cat function concatenates the R objects and prints them. cat(log1, log2, log3, log4, log5) return: 3 3 3 3 0.3333333 1.2 Vectors Vectors are the most basic object in R. They contain ordered elements of the same type. Vectors of size &gt; 1 are created using the “c” function. v &lt;- c(0,1,2,3,4,5,6,7,8,9) print(v) return: [1] 0 1 2 3 4 5 6 7 8 9 Computations on vectors are performed element-wise. v &lt;- v * 3 print(v) return: [1] 0 3 6 9 12 15 18 21 24 27 When we are working with a vector, we might to see what the fourth or fifth element is. We can use indexing to identify them. Indexing looks like this: v[4] return: [1] 9 v[5] return: [1] 12 Finally, we may wish to remove elements from a vector. We can use the subset function to do this. 1.3 Loading Packages Before we move on to datasets, rather than just vectors, let’s install some necessary packages. Packages are collections of R functions, data, and compiled code. They are built by members of the R community to add functionality to base R. Generally, if you wish you could do something with R, someone has built a package to do it already! We will use a few packages, some of which are built into R. We will need to install the others. For now, we just need to install tidyverse, which is the most complete data analysis and visualization package for R. To do so, we use the install.packages() function. # install.packages(&quot;tidyverse&quot;) The library function tells R to add the contents of the package to the current R session so that we can use it in our analyses. library(tidyverse) We will use the library() function every time we start a new R session. If R cannot find a function that you are sure is in a package you use, it normally means the package isn’t loaded or that you somehow misspelled the function name. 1.4 Exploring and Visualizing Data Now, let’s actually get our hands dirty and start analyzing data. The first thing we will need to do is to pick a data set to analyze. A good candidate is the General Social Survey (GSS) - a large-scale survey that sociologists have been administering since the 1960s, meant to gauge the changing social attitudes and practices of Americans over time. It is probably sociology’s most celebrated dataset, the subject of tens of thousands of papers since its inception. It isn’t quite big data (only a couple thousand respondets each year), but it is a good starting point for our first data exercises. To download the GSS, first navigate to: https://gss.norc.org/get-the-data/stata Then, click where it says 2018, under the heading Download Individual Year Data Sets (cross-section only). For now, drag the downloaded file to your Desktop. It is a STATA file, so we will have to use a special R package, foreign, to load it into R as well as the function, read.dta, from that package. A function is basically a command which helps you do something. Later on, we will work on writing our own functions, for now we will us the functions that other people’s packages supply for us. # load in the foreign package.. it comes with R library(foreign) # now we can load in the GSS data gss &lt;- read.dta(&quot;Data/GSS2018.dta&quot;) You can use the View() or head() functions to actually view the data and see what it looks like. ## abany abdefect abfelegl abhelp1 abhelp2 abhelp3 abhelp4 abhlth ## 1 no yes &lt;NA&gt; yes yes yes yes yes ## 2 yes yes it depends no no no no yes ## 3 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; yes no yes yes &lt;NA&gt; ## 4 &lt;NA&gt; &lt;NA&gt; should yes yes yes yes &lt;NA&gt; ## 5 no yes &lt;NA&gt; no no no yes yes ## 6 yes yes should yes yes yes yes yes ## abinspay abmedgov1 ## 1 people should be able the government should decide ## 2 people should not be able &lt;NA&gt; ## 3 people should not be able a woman and her medical professional should decide ## 4 people should be able &lt;NA&gt; ## 5 people should not be able &lt;NA&gt; ## 6 people should be able &lt;NA&gt; If you have ever worked with Excel before, this should look pretty familiar! In R, this is called a data.frame(). It is the most common way we will use to organize data. class(gss) return: [1] &quot;data.frame&quot; A data.frame is organized into rows and columns. Each row holds the data for a single respondent, whereas each column holds the data for a single variable (or question). Let’s see how many people (rows) and variables (columns) the data have. # Check the number of rows nrow(gss) return: [1] 2348 # Check the number of columns ncol(gss) return: [1] 1064 # Or both at the same time! dim(gss) return: [1] 2348 1064 We can find this information over in the environment too. The rows are numbered, while the columns have names. But if you look at the column names, they won’t make much sense. # check the column names colnames(gss) ## [1] &quot;abany&quot; &quot;abdefect&quot; &quot;abfelegl&quot; &quot;abhelp1&quot; ## [5] &quot;abhelp2&quot; &quot;abhelp3&quot; &quot;abhelp4&quot; &quot;abhlth&quot; ## [9] &quot;abinspay&quot; &quot;abmedgov1&quot; &quot;abmedgov2&quot; &quot;abmelegl&quot; ## [13] &quot;abmoral&quot; &quot;abnomore&quot; &quot;abpoor&quot; &quot;abpoorw&quot; ## [17] &quot;abrape&quot; &quot;absingle&quot; &quot;abstate1&quot; &quot;abstate2&quot; ## [21] &quot;acqntsex&quot; &quot;actssoc&quot; &quot;adults&quot; &quot;advfront&quot; ## [25] &quot;affrmact&quot; &quot;afraidof&quot; &quot;afterlif&quot; &quot;age&quot; ## [29] &quot;aged&quot; &quot;agekdbrn&quot; &quot;ancestrs&quot; &quot;arthrtis&quot; ## [33] &quot;astrolgy&quot; &quot;astrosci&quot; &quot;atheists&quot; &quot;attend&quot; ## [37] &quot;attend12&quot; &quot;attendma&quot; &quot;attendpa&quot; &quot;away1&quot; ## [41] &quot;away11&quot; &quot;away2&quot; &quot;away3&quot; &quot;away4&quot; ## [45] &quot;away5&quot; &quot;away6&quot; &quot;away7&quot; &quot;babies&quot; ## [49] &quot;backpain&quot; &quot;ballot&quot; &quot;balneg&quot; &quot;balpos&quot; ## [53] &quot;befair&quot; &quot;betrlang&quot; &quot;bible&quot; &quot;bigbang&quot; ## [57] &quot;bigbang1&quot; &quot;bigbang2&quot; &quot;bird&quot; &quot;birdb4&quot; ## [61] &quot;born&quot; &quot;boyorgrl&quot; &quot;breakdwn&quot; &quot;buddhsts&quot; ## [65] &quot;buyesop&quot; &quot;buyvalue&quot; &quot;cantrust&quot; &quot;cappun&quot; ## [69] &quot;cat&quot; &quot;catb4&quot; &quot;charactr&quot; &quot;chemgen&quot; ## [73] &quot;childs&quot; &quot;chldidel&quot; &quot;christns&quot; &quot;churhpow&quot; ## [77] &quot;class&quot; &quot;clergvte&quot; &quot;closeto1&quot; &quot;closeto2&quot; ## [81] &quot;closeto3&quot; &quot;closeto4&quot; &quot;closeto5&quot; &quot;cntctfam&quot; ## [85] &quot;cntctfrd&quot; &quot;cntctkid&quot; &quot;cntctpar&quot; &quot;cntctsib&quot; ## [89] &quot;codeg&quot; &quot;coden&quot; &quot;coeduc&quot; &quot;coevwork&quot; ## [93] &quot;cofund&quot; &quot;cohort&quot; &quot;cohrs1&quot; &quot;cohrs2&quot; ## [97] &quot;coind10&quot; &quot;coisco08&quot; &quot;cojew&quot; &quot;colath&quot; ## [101] &quot;colcom&quot; &quot;coldeg1&quot; &quot;colhomo&quot; &quot;colmil&quot; ## [105] &quot;colmslm&quot; &quot;colrac&quot; &quot;colsci&quot; &quot;colscinm&quot; ## [109] &quot;comfort&quot; &quot;company&quot; &quot;compperf&quot; &quot;comprend&quot; ## [113] &quot;compuse&quot; &quot;compwage&quot; &quot;conarmy&quot; &quot;conbiz&quot; ## [117] &quot;conbus&quot; &quot;conchurh&quot; &quot;conclerg&quot; &quot;concong&quot; ## [121] &quot;concourt&quot; &quot;condemnd&quot; &quot;condom&quot; &quot;condrift&quot; ## [125] &quot;coneduc&quot; &quot;conf2f&quot; &quot;confed&quot; &quot;confinan&quot; ## [129] &quot;coninc&quot; &quot;conjudge&quot; &quot;conlabor&quot; &quot;conlegis&quot; ## [133] &quot;conmedic&quot; &quot;conpress&quot; &quot;conrinc&quot; &quot;conschls&quot; ## [137] &quot;consci&quot; &quot;consent&quot; &quot;contv&quot; &quot;conwkday&quot; ## [141] &quot;coocc10&quot; &quot;coop&quot; &quot;coother&quot; &quot;copres10&quot; ## [145] &quot;copres105plus&quot; &quot;corel&quot; &quot;cosei10&quot; &quot;cosei10educ&quot; ## [149] &quot;cosei10inc&quot; &quot;courts&quot; &quot;cowrkhlp&quot; &quot;cowrkint&quot; ## [153] &quot;cowrkslf&quot; &quot;cowrksta&quot; &quot;crack30&quot; &quot;dangoth1&quot; ## [157] &quot;dangoth2&quot; &quot;dangoth3&quot; &quot;dangoth4&quot; &quot;dangoth5&quot; ## [161] &quot;dangroth&quot; &quot;dangrslf&quot; &quot;dangslf1&quot; &quot;dangslf2&quot; ## [165] &quot;dangslf3&quot; &quot;dangslf4&quot; &quot;dangslf5&quot; &quot;dateintv&quot; ## [169] &quot;decmoney&quot; &quot;dectreat&quot; &quot;defpensn&quot; &quot;degree&quot; ## [173] &quot;demands&quot; &quot;denkid&quot; &quot;denom&quot; &quot;denom16&quot; ## [177] &quot;depress&quot; &quot;deptperf&quot; &quot;diabetes&quot; &quot;diagnosd&quot; ## [181] &quot;difrel&quot; &quot;dinefrds&quot; &quot;dipged&quot; &quot;discaff&quot; ## [185] &quot;discaffm&quot; &quot;discaffw&quot; &quot;disrspct&quot; &quot;divlaw&quot; ## [189] &quot;divorce&quot; &quot;dofirst&quot; &quot;dog&quot; &quot;dogb4&quot; ## [193] &quot;dwelling&quot; &quot;dwellpre&quot; &quot;dwelown&quot; &quot;dwelown16&quot; ## [197] &quot;earnrs&quot; &quot;earthsun&quot; &quot;educ&quot; &quot;egomeans&quot; ## [201] &quot;electron&quot; &quot;emailhr&quot; &quot;emailmin&quot; &quot;emoprobs&quot; ## [205] &quot;empinput&quot; &quot;emptrain&quot; &quot;endsmeet&quot; &quot;eqwlth&quot; ## [209] &quot;esop&quot; &quot;esopnot&quot; &quot;eth1&quot; &quot;eth2&quot; ## [213] &quot;eth3&quot; &quot;ethnic&quot; &quot;ethnum&quot; &quot;evcrack&quot; ## [217] &quot;evidu&quot; &quot;evolved&quot; &quot;evolved2&quot; &quot;evpaidsx&quot; ## [221] &quot;evstray&quot; &quot;evwork&quot; &quot;expdesgn&quot; &quot;exptext&quot; ## [225] &quot;extr2017&quot; &quot;extrapay&quot; &quot;extraval&quot; &quot;extrayr&quot; ## [229] &quot;fair&quot; &quot;fairearn&quot; &quot;famdif16&quot; &quot;famgen&quot; ## [233] &quot;family16&quot; &quot;fammhneg&quot; &quot;fampress&quot; &quot;famvswk&quot; ## [237] &quot;famwkoff&quot; &quot;fatalism&quot; &quot;fatigue&quot; &quot;fear&quot; ## [241] &quot;fechld&quot; &quot;feelevel&quot; &quot;feelrel&quot; &quot;feeused&quot; ## [245] &quot;fefam&quot; &quot;fehire&quot; &quot;fejobaff&quot; &quot;fepol&quot; ## [249] &quot;fepresch&quot; &quot;finalter&quot; &quot;finrela&quot; &quot;firstyou&quot; ## [253] &quot;fish&quot; &quot;fishb4&quot; &quot;form&quot; &quot;formwt&quot; ## [257] &quot;fringeok&quot; &quot;frndsex&quot; &quot;fucitzn&quot; &quot;fund&quot; ## [261] &quot;fund16&quot; &quot;gender1&quot; &quot;gender10&quot; &quot;gender11&quot; ## [265] &quot;gender12&quot; &quot;gender2&quot; &quot;gender3&quot; &quot;gender4&quot; ## [269] &quot;gender5&quot; &quot;gender6&quot; &quot;gender7&quot; &quot;gender8&quot; ## [273] &quot;gender9&quot; &quot;geneabrt2&quot; &quot;genegen&quot; &quot;genegoo2&quot; ## [277] &quot;geneself2&quot; &quot;genetics&quot; &quot;genetst1&quot; &quot;getahead&quot; ## [281] &quot;goat&quot; &quot;goatb4&quot; &quot;god&quot; &quot;godchnge&quot; ## [285] &quot;godmeans&quot; &quot;godswill&quot; &quot;goodlife&quot; &quot;goveqinc&quot; ## [289] &quot;govlazy&quot; &quot;govvsrel&quot; &quot;granborn&quot; &quot;grass&quot; ## [293] &quot;gunlaw&quot; &quot;handmove&quot; &quot;hapcohab&quot; &quot;hapmar&quot; ## [297] &quot;happy&quot; &quot;hapunhap&quot; &quot;haveinfo&quot; &quot;health&quot; ## [301] &quot;health1&quot; &quot;healthissp&quot; &quot;heaven&quot; &quot;hefinfo&quot; ## [305] &quot;height&quot; &quot;hell&quot; &quot;helpblk&quot; &quot;helpfrds&quot; ## [309] &quot;helpful&quot; &quot;helpnot&quot; &quot;helpoth&quot; &quot;helppoor&quot; ## [313] &quot;helpsick&quot; &quot;hhrace&quot; &quot;hhtype&quot; &quot;hhtype1&quot; ## [317] &quot;hindus&quot; &quot;hispanic&quot; &quot;hivtest&quot; &quot;hivtest1&quot; ## [321] &quot;hivtest2&quot; &quot;hlpadvce&quot; &quot;hlpdown&quot; &quot;hlpequip&quot; ## [325] &quot;hlphome&quot; &quot;hlpjob&quot; &quot;hlploan&quot; &quot;hlppaper&quot; ## [329] &quot;hlpresde&quot; &quot;hlpsick&quot; &quot;hlpsickr&quot; &quot;hlpsococ&quot; ## [333] &quot;hlthdays&quot; &quot;hlthmntl&quot; &quot;hlthphys&quot; &quot;hlthstrt&quot; ## [337] &quot;homosex&quot; &quot;homosex1&quot; &quot;hompop&quot; &quot;horse&quot; ## [341] &quot;horseb4&quot; &quot;hotcore&quot; &quot;hrs1&quot; &quot;hrs2&quot; ## [345] &quot;hrsrelax&quot; &quot;hsbio&quot; &quot;hschem&quot; &quot;hsmath&quot; ## [349] &quot;hsphys&quot; &quot;huadd&quot; &quot;huaddwhy&quot; &quot;hubbywrk&quot; ## [353] &quot;huclean&quot; &quot;hunt&quot; &quot;hunt1&quot; &quot;hurtatwk&quot; ## [357] &quot;hurtoth&quot; &quot;hurtself&quot; &quot;hvylift&quot; &quot;hyperten&quot; ## [361] &quot;id&quot; &quot;idu30&quot; &quot;if12who&quot; &quot;if16who&quot; ## [365] &quot;imbalnce&quot; &quot;imprvown&quot; &quot;imprvtrt&quot; &quot;incgap&quot; ## [369] &quot;incom16&quot; &quot;income&quot; &quot;income16&quot; &quot;incuspop&quot; ## [373] &quot;indperf&quot; &quot;indus10&quot; &quot;indusgen&quot; &quot;intage&quot; ## [377] &quot;intcntct&quot; &quot;intecon&quot; &quot;inteduc&quot; &quot;intenvir&quot; ## [381] &quot;intethn&quot; &quot;intfarm&quot; &quot;inthisp&quot; &quot;intid&quot; ## [385] &quot;intintl&quot; &quot;intlblks&quot; &quot;intlhsps&quot; &quot;intlwhts&quot; ## [389] &quot;intmed&quot; &quot;intmil&quot; &quot;intrace1&quot; &quot;intrace2&quot; ## [393] &quot;intrace3&quot; &quot;intsci&quot; &quot;intsex&quot; &quot;intspace&quot; ## [397] &quot;inttech&quot; &quot;intyrs&quot; &quot;isco08&quot; &quot;isco88&quot; ## [401] &quot;issp&quot; &quot;jew&quot; &quot;jew16&quot; &quot;jews&quot; ## [405] &quot;jobfind&quot; &quot;jobfind1&quot; &quot;joblose&quot; &quot;jobsecok&quot; ## [409] &quot;kidpars&quot; &quot;kidsinhh&quot; &quot;kidssol&quot; &quot;knowschd&quot; ## [413] &quot;knowwhat&quot; &quot;knwbus&quot; &quot;knwclenr&quot; &quot;knwcop&quot; ## [417] &quot;knwcuttr&quot; &quot;knwexec&quot; &quot;knwhrman&quot; &quot;knwlawyr&quot; ## [421] &quot;knwmchnc&quot; &quot;knwmw1&quot; &quot;knwmw2&quot; &quot;knwmw3&quot; ## [425] &quot;knwmw4&quot; &quot;knwmw5&quot; &quot;knwnurse&quot; &quot;knwtcher&quot; ## [429] &quot;laidoff&quot; &quot;lasers&quot; &quot;learnnew&quot; &quot;letdie1&quot; ## [433] &quot;letin1a&quot; &quot;libath&quot; &quot;libcom&quot; &quot;libhomo&quot; ## [437] &quot;libmil&quot; &quot;libmslm&quot; &quot;librac&quot; &quot;life&quot; ## [441] &quot;lifein5&quot; &quot;lifenow&quot; &quot;liveblks&quot; &quot;lngthinv&quot; ## [445] &quot;localnum&quot; &quot;lonely1&quot; &quot;lonely2&quot; &quot;lonely3&quot; ## [449] &quot;madeg&quot; &quot;madenkid&quot; &quot;maeduc&quot; &quot;maind10&quot; ## [453] &quot;maisco08&quot; &quot;maisco88&quot; &quot;major1&quot; &quot;major2&quot; ## [457] &quot;majorcol&quot; &quot;makefrnd&quot; &quot;maleornt&quot; &quot;manvsemp&quot; ## [461] &quot;maocc10&quot; &quot;mapres10&quot; &quot;mapres105plus&quot; &quot;mar1&quot; ## [465] &quot;mar11&quot; &quot;mar12&quot; &quot;mar2&quot; &quot;mar3&quot; ## [469] &quot;mar4&quot; &quot;mar5&quot; &quot;mar6&quot; &quot;mar7&quot; ## [473] &quot;mar8&quot; &quot;mar9&quot; &quot;marasian&quot; &quot;marblk&quot; ## [477] &quot;marcohab&quot; &quot;marelkid&quot; &quot;marhisp&quot; &quot;marhomo&quot; ## [481] &quot;marital&quot; &quot;martype&quot; &quot;marwht&quot; &quot;masei10&quot; ## [485] &quot;masei10educ&quot; &quot;masei10inc&quot; &quot;matesex&quot; &quot;mawrkgrw&quot; ## [489] &quot;mawrkslf&quot; &quot;mcsds1&quot; &quot;mcsds2&quot; &quot;mcsds3&quot; ## [493] &quot;mcsds4&quot; &quot;mcsds5&quot; &quot;mcsds6&quot; &quot;mcsds7&quot; ## [497] &quot;meddoc&quot; &quot;mentldoc&quot; &quot;mentlhos&quot; &quot;mentlill&quot; ## [501] &quot;mentloth&quot; &quot;meovrwrk&quot; &quot;mhdiagno&quot; &quot;mhp1r1&quot; ## [505] &quot;mhp1r2&quot; &quot;mhp2r1&quot; &quot;mhp2r2&quot; &quot;mhp3r1&quot; ## [509] &quot;mhp3r2&quot; &quot;mhp4r1&quot; &quot;mhp4r2&quot; &quot;mhp5r1&quot; ## [513] &quot;mhp5r2&quot; &quot;mhtreat1&quot; &quot;mhtreat2&quot; &quot;mhtreat3&quot; ## [517] &quot;mhtreat4&quot; &quot;mhtreat5&quot; &quot;mhtreatd&quot; &quot;mhunsure&quot; ## [521] &quot;miracles&quot; &quot;misswork&quot; &quot;mnthsusa&quot; &quot;mntlhlth&quot; ## [525] &quot;mobile16&quot; &quot;mode&quot; &quot;moredays&quot; &quot;muslims&quot; ## [529] &quot;mustdoc&quot; &quot;musthosp&quot; &quot;mustmed&quot; &quot;mustwork&quot; ## [533] &quot;mygoals&quot; &quot;myprobs1&quot; &quot;myprobs2&quot; &quot;myprobs3&quot; ## [537] &quot;myprobs4&quot; &quot;myprobs5&quot; &quot;myskills&quot; &quot;mywaygod&quot; ## [541] &quot;nanoben&quot; &quot;nanoharm&quot; &quot;nanowill&quot; &quot;nataccess&quot; ## [545] &quot;natactive&quot; &quot;nataid&quot; &quot;nataidy&quot; &quot;natarms&quot; ## [549] &quot;natarmsy&quot; &quot;natchld&quot; &quot;natcity&quot; &quot;natcityy&quot; ## [553] &quot;natcrime&quot; &quot;natcrimy&quot; &quot;natdrug&quot; &quot;natdrugy&quot; ## [557] &quot;nateduc&quot; &quot;nateducy&quot; &quot;natenrgy&quot; &quot;natenvir&quot; ## [561] &quot;natenviy&quot; &quot;natfare&quot; &quot;natfarey&quot; &quot;natheal&quot; ## [565] &quot;nathealy&quot; &quot;natlack&quot; &quot;natmass&quot; &quot;natmeet&quot; ## [569] &quot;natnotice&quot; &quot;natpark&quot; &quot;natrace&quot; &quot;natracey&quot; ## [573] &quot;natrelax&quot; &quot;natroad&quot; &quot;natsat&quot; &quot;natsci&quot; ## [577] &quot;natsoc&quot; &quot;natspac&quot; &quot;natspacy&quot; &quot;nattime&quot; ## [581] &quot;nattimeok&quot; &quot;natviews&quot; &quot;neisafe&quot; &quot;newfrds&quot; ## [585] &quot;news&quot; &quot;newsfrom&quot; &quot;nextgen&quot; &quot;nihilism&quot; ## [589] &quot;notsmart&quot; &quot;ntwkhard&quot; &quot;nukegen&quot; &quot;numcong&quot; ## [593] &quot;numemps&quot; &quot;numlangs&quot; &quot;nummen&quot; &quot;numorg&quot; ## [597] &quot;numpets&quot; &quot;numwomen&quot; &quot;obey&quot; &quot;occ10&quot; ## [601] &quot;odds1&quot; &quot;odds2&quot; &quot;old1&quot; &quot;old10&quot; ## [605] &quot;old11&quot; &quot;old12&quot; &quot;old2&quot; &quot;old3&quot; ## [609] &quot;old4&quot; &quot;old5&quot; &quot;old6&quot; &quot;old7&quot; ## [613] &quot;old8&quot; &quot;old9&quot; &quot;opdevel&quot; &quot;otcmed&quot; ## [617] &quot;oth16&quot; &quot;other&quot; &quot;othersex&quot; &quot;othlang&quot; ## [621] &quot;othlang1&quot; &quot;othlang2&quot; &quot;othmhneg&quot; &quot;othpet&quot; ## [625] &quot;othpetb4&quot; &quot;oversamp&quot; &quot;overwork&quot; &quot;owngun&quot; ## [629] &quot;ownstock&quot; &quot;padeg&quot; &quot;padenkid&quot; &quot;paeduc&quot; ## [633] &quot;paidsex&quot; &quot;painarms&quot; &quot;paind10&quot; &quot;paisco08&quot; ## [637] &quot;paisco88&quot; &quot;paocc10&quot; &quot;papres10&quot; &quot;papres105plus&quot; ## [641] &quot;parborn&quot; &quot;parelkid&quot; &quot;parsol&quot; &quot;partfull&quot; ## [645] &quot;partlsc&quot; &quot;partners&quot; &quot;partnrs5&quot; &quot;partpart&quot; ## [649] &quot;partteam&quot; &quot;partvol&quot; &quot;partyid&quot; &quot;pasei10&quot; ## [653] &quot;pasei10educ&quot; &quot;pasei10inc&quot; &quot;pawrkslf&quot; &quot;petb4&quot; ## [657] &quot;petb4cmfrt&quot; &quot;petb4fam&quot; &quot;petb4ply&quot; &quot;petcmfrt&quot; ## [661] &quot;petfam&quot; &quot;petplay&quot; &quot;phase&quot; &quot;phone&quot; ## [665] &quot;phyeffrt&quot; &quot;physacts&quot; &quot;physhlth&quot; &quot;physill&quot; ## [669] &quot;pig&quot; &quot;pigb4&quot; &quot;pikupsex&quot; &quot;pilingup&quot; ## [673] &quot;pillok&quot; &quot;pistol&quot; &quot;polabuse&quot; &quot;polattak&quot; ## [677] &quot;poleff11&quot; &quot;polescap&quot; &quot;polhitok&quot; &quot;polmurdr&quot; ## [681] &quot;polviews&quot; &quot;poorserv&quot; &quot;popespks&quot; &quot;popular&quot; ## [685] &quot;pornlaw&quot; &quot;posslq&quot; &quot;posslqy&quot; &quot;postlife&quot; ## [689] &quot;pray&quot; &quot;prayer&quot; &quot;prayfreq&quot; &quot;premarsx&quot; ## [693] &quot;pres12&quot; &quot;pres16&quot; &quot;prestg10&quot; &quot;prestg105plus&quot; ## [697] &quot;preteen&quot; &quot;prodctiv&quot; &quot;promtefr&quot; &quot;promteok&quot; ## [701] &quot;proudemp&quot; &quot;prvdhlth&quot; &quot;prvdold&quot; &quot;quallife&quot; ## [705] &quot;racdif1&quot; &quot;racdif2&quot; &quot;racdif3&quot; &quot;racdif4&quot; ## [709] &quot;race&quot; &quot;racecen1&quot; &quot;racecen2&quot; &quot;racecen3&quot; ## [713] &quot;raclive&quot; &quot;racopen&quot; &quot;racwork&quot; &quot;radioact&quot; ## [717] &quot;random&quot; &quot;rank&quot; &quot;ratepain&quot; &quot;ratetone&quot; ## [721] &quot;realinc&quot; &quot;realrinc&quot; &quot;reborn&quot; &quot;reg16&quot; ## [725] &quot;region&quot; &quot;relactiv&quot; &quot;relate1&quot; &quot;relate10&quot; ## [729] &quot;relate11&quot; &quot;relate12&quot; &quot;relate2&quot; &quot;relate3&quot; ## [733] &quot;relate4&quot; &quot;relate5&quot; &quot;relate6&quot; &quot;relate7&quot; ## [737] &quot;relate8&quot; &quot;relate9&quot; &quot;relatsex&quot; &quot;relext1&quot; ## [741] &quot;relext3&quot; &quot;relgenbar&quot; &quot;relgeneq&quot; &quot;relhh1&quot; ## [745] &quot;relhh10&quot; &quot;relhh11&quot; &quot;relhh12&quot; &quot;relhh2&quot; ## [749] &quot;relhh3&quot; &quot;relhh4&quot; &quot;relhh5&quot; &quot;relhh6&quot; ## [753] &quot;relhh7&quot; &quot;relhh8&quot; &quot;relhh9&quot; &quot;relhhd1&quot; ## [757] &quot;relhhd10&quot; &quot;relhhd11&quot; &quot;relhhd12&quot; &quot;relhhd2&quot; ## [761] &quot;relhhd3&quot; &quot;relhhd4&quot; &quot;relhhd5&quot; &quot;relhhd6&quot; ## [765] &quot;relhhd7&quot; &quot;relhhd8&quot; &quot;relhhd9&quot; &quot;relig&quot; ## [769] &quot;relig16&quot; &quot;religcon&quot; &quot;religint&quot; &quot;religkid&quot; ## [773] &quot;reliten&quot; &quot;relmarry&quot; &quot;relobjct&quot; &quot;relpast&quot; ## [777] &quot;relpersn&quot; &quot;relrlvnt&quot; &quot;relscrpt&quot; &quot;relsp1&quot; ## [781] &quot;relsp10&quot; &quot;relsp11&quot; &quot;relsp12&quot; &quot;relsp2&quot; ## [785] &quot;relsp3&quot; &quot;relsp4&quot; &quot;relsp5&quot; &quot;relsp6&quot; ## [789] &quot;relsp7&quot; &quot;relsp8&quot; &quot;relsp9&quot; &quot;relsprt&quot; ## [793] &quot;reptile&quot; &quot;reptileb4&quot; &quot;res16&quot; &quot;respect&quot; ## [797] &quot;respnum&quot; &quot;respond&quot; &quot;rfamlook&quot; &quot;rgroomed&quot; ## [801] &quot;rhlthend&quot; &quot;richwork&quot; &quot;rifle&quot; &quot;rincblls&quot; ## [805] &quot;rincom16&quot; &quot;rincome&quot; &quot;rlooks&quot; &quot;rowngun&quot; ## [809] &quot;rplace&quot; &quot;rvisitor&quot; &quot;rweight&quot; &quot;rxmed&quot; ## [813] &quot;safefrst&quot; &quot;safehlth&quot; &quot;safetywk&quot; &quot;sampcode&quot; ## [817] &quot;sample&quot; &quot;satfam7&quot; &quot;satfin&quot; &quot;satjob&quot; ## [821] &quot;satjob1&quot; &quot;satlife&quot; &quot;satsoc&quot; &quot;savesoul&quot; ## [825] &quot;scibnfts&quot; &quot;scientbe&quot; &quot;scientgo&quot; &quot;scienthe&quot; ## [829] &quot;scientod&quot; &quot;scifrom&quot; &quot;scinews1&quot; &quot;scinews2&quot; ## [833] &quot;scinews3&quot; &quot;scistudy&quot; &quot;scitext&quot; &quot;secondwk&quot; ## [837] &quot;seeksci&quot; &quot;seetalk1&quot; &quot;seetalk2&quot; &quot;seetalk3&quot; ## [841] &quot;seetalk4&quot; &quot;seetalk5&quot; &quot;sei10&quot; &quot;sei10educ&quot; ## [845] &quot;sei10inc&quot; &quot;selfhelp&quot; &quot;seriousp&quot; &quot;severe1&quot; ## [849] &quot;severe2&quot; &quot;severe3&quot; &quot;severe4&quot; &quot;severe5&quot; ## [853] &quot;sex&quot; &quot;sexbirth&quot; &quot;sexeduc&quot; &quot;sexfreq&quot; ## [857] &quot;sexnow&quot; &quot;sexornt&quot; &quot;sexsex&quot; &quot;sexsex5&quot; ## [861] &quot;shotgun&quot; &quot;sibs&quot; &quot;size&quot; &quot;slfmangd&quot; ## [865] &quot;slpprblm&quot; &quot;smallgap&quot; &quot;smammal&quot; &quot;smammalb4&quot; ## [869] &quot;socbar&quot; &quot;socfrend&quot; &quot;socommun&quot; &quot;socrel&quot; ## [873] &quot;solarrev&quot; &quot;spaneng&quot; &quot;spanint&quot; &quot;spanking&quot; ## [877] &quot;spanself&quot; &quot;spdeg&quot; &quot;spden&quot; &quot;speduc&quot; ## [881] &quot;spevwork&quot; &quot;spfalook&quot; &quot;spfund&quot; &quot;sphealer&quot; ## [885] &quot;sphrs1&quot; &quot;sphrs2&quot; &quot;spind10&quot; &quot;spisco08&quot; ## [889] &quot;spisco88&quot; &quot;spjew&quot; &quot;spkath&quot; &quot;spkcom&quot; ## [893] &quot;spkhomo&quot; &quot;spklang&quot; &quot;spkmil&quot; &quot;spkmslm&quot; ## [897] &quot;spkrac&quot; &quot;splive&quot; &quot;spocc10&quot; &quot;spother&quot; ## [901] &quot;sppres10&quot; &quot;sppres105plus&quot; &quot;sprel&quot; &quot;sprtprsn&quot; ## [905] &quot;spsei10&quot; &quot;spsei10educ&quot; &quot;spsei10inc&quot; &quot;spvtrfair&quot; ## [909] &quot;spwksup&quot; &quot;spwrkslf&quot; &quot;spwrksta&quot; &quot;srcbelt&quot; ## [913] &quot;stockops&quot; &quot;stockval&quot; &quot;stress&quot; &quot;stress12&quot; ## [917] &quot;stresses&quot; &quot;strredpg&quot; &quot;suicide1&quot; &quot;suicide2&quot; ## [921] &quot;suicide3&quot; &quot;suicide4&quot; &quot;supcares&quot; &quot;supervis&quot; ## [925] &quot;suphelp&quot; &quot;tax&quot; &quot;teamsafe&quot; &quot;teens&quot; ## [929] &quot;teensex&quot; &quot;tempgen&quot; &quot;theism&quot; &quot;thnkself&quot; ## [933] &quot;threaten&quot; &quot;tlkclrgy&quot; &quot;tlkfam&quot; &quot;toofast&quot; ## [937] &quot;toofewwk&quot; &quot;trbigbus&quot; &quot;trcourts&quot; &quot;trdunion&quot; ## [941] &quot;trust&quot; &quot;trustman&quot; &quot;trustsci&quot; &quot;trynewjb&quot; ## [945] &quot;tvhours&quot; &quot;unemp&quot; &quot;unhappy&quot; &quot;union&quot; ## [949] &quot;union1&quot; &quot;unrelat&quot; &quot;upsdowns&quot; &quot;upset&quot; ## [953] &quot;uscitzn&quot; &quot;usedup&quot; &quot;usetech&quot; &quot;usewww&quot; ## [957] &quot;uswary&quot; &quot;version&quot; &quot;vetyears&quot; &quot;vigfrnd&quot; ## [961] &quot;viggrp&quot; &quot;viglabel&quot; &quot;vigmar&quot; &quot;vignei&quot; ## [965] &quot;vigsoc&quot; &quot;vigversn&quot; &quot;vigwork&quot; &quot;viruses&quot; ## [969] &quot;visitors&quot; &quot;visnhist&quot; &quot;vissci&quot; &quot;vistholy&quot; ## [973] &quot;viszoo&quot; &quot;vote12&quot; &quot;vote16&quot; &quot;vpsu&quot; ## [977] &quot;vstrat&quot; &quot;watergen&quot; &quot;waypaid&quot; &quot;wayraise&quot; ## [981] &quot;wealth&quot; &quot;webmob&quot; &quot;weekswrk&quot; &quot;weight&quot; ## [985] &quot;where1&quot; &quot;where11&quot; &quot;where2&quot; &quot;where3&quot; ## [989] &quot;where4&quot; &quot;where5&quot; &quot;where6&quot; &quot;where7&quot; ## [993] &quot;whoelse1&quot; &quot;whoelse2&quot; &quot;whoelse3&quot; &quot;whoelse4&quot; ## [997] &quot;whoelse5&quot; &quot;whoelse6&quot; &quot;whynopet&quot; &quot;whywkhme&quot; ## [1001] &quot;widowed&quot; &quot;wkageism&quot; &quot;wkdecide&quot; &quot;wkfreedm&quot; ## [1005] &quot;wkharoth&quot; &quot;wkharsex&quot; &quot;wkpraise&quot; &quot;wkracism&quot; ## [1009] &quot;wksexism&quot; &quot;wksmooth&quot; &quot;wksub&quot; &quot;wksub1&quot; ## [1013] &quot;wksubs&quot; &quot;wksubs1&quot; &quot;wksup&quot; &quot;wksup1&quot; ## [1017] &quot;wksups&quot; &quot;wksups1&quot; &quot;wkvsfam&quot; &quot;wlthblks&quot; ## [1021] &quot;wlthhsps&quot; &quot;wlthwhts&quot; &quot;worda&quot; &quot;wordb&quot; ## [1025] &quot;wordc&quot; &quot;wordd&quot; &quot;worde&quot; &quot;wordf&quot; ## [1029] &quot;wordg&quot; &quot;wordh&quot; &quot;wordi&quot; &quot;wordj&quot; ## [1033] &quot;wordsum&quot; &quot;workblks&quot; &quot;workdiff&quot; &quot;workfast&quot; ## [1037] &quot;workfor1&quot; &quot;workhard&quot; &quot;workhsps&quot; &quot;workwhts&quot; ## [1041] &quot;wrkgovt&quot; &quot;wrkhome&quot; &quot;wrksched&quot; &quot;wrkslf&quot; ## [1045] &quot;wrkslffam&quot; &quot;wrkstat&quot; &quot;wrktime&quot; &quot;wrktype&quot; ## [1049] &quot;wrkwayup&quot; &quot;wtss&quot; &quot;wtssall&quot; &quot;wtssnr&quot; ## [1053] &quot;wwwhr&quot; &quot;wwwmin&quot; &quot;xmarsex&quot; &quot;xmarsex1&quot; ## [1057] &quot;xmovie&quot; &quot;xnorcsiz&quot; &quot;year&quot; &quot;yearsjob&quot; ## [1061] &quot;yearsusa&quot; &quot;yearval&quot; &quot;yousup&quot; &quot;zodiac&quot; They are like a secret code - if you know what the code means then you can figure out what information a variable holds. But how do we figure that out? We have to use a codebook! Head over to https://gssdataexplorer.norc.org/variables/vfilter for an accessible online codebook. You can search for keywords to see if it has variables that you care about. Here are some random suggestions: * age * income * partyid * sex * race * hrs1 We can evaluate these variables more closely using various R functions. For example, what are respondents’ average age? We use the mean function for that, and specify the na.rm = T option to tell R that respodent’s who didn’t report an age should be ignored. mean(gss$age, na.rm = T) return: [1] 48.97138 Interesting - almost 50 years old! By comparison, the average age in the US is roughly 38 years old. This might signal that the GSS is skewed towards older respondents, but we have to remember that babies do not take surveys. We can use the summary function to get a host of information about a variable’s distribution. For example, below we apply it to partyid - a measure of political affiliation which goes from 1 (Strong Demcorat) to 7 (Strong Republican) [the reason that it is different in practice than what the codebook says is because of how R converts factors to numerics, which we have to do to examine the scale quantitatively – specifically, the first option of a factor in R will be a 1 rather than a 0]. The median is a 4, which is dabsmack in the middle of the scale. The median respondent is an independent with no reported party leanings. summary(as.numeric(gss$partyid), na.rm = T) ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 1.000 2.000 4.000 3.883 6.000 8.000 33 Cool! What if we wanted to see how two variables relate to one another? For example, we have heard from pundits that racial background strongly shapes political leaning in the today’s America – does the GSS confirm that conclusion? For comparison, we can also look at how people of varioius racial backgrounds differ by age. To achieve this, we first have to group the data by race using the group_by function from tidyverse. gss &lt;- gss %&gt;% group_by(race) Now that respondents are grouped by race, we can use the summarize function to evaluate each group’s average party identification and age. vars_by_race &lt;- gss %&gt;% summarise( partyid = mean(as.numeric(partyid), na.rm = T), age = mean(age, na.rm = T) ) vars_by_race ## # A tibble: 3 × 3 ## race partyid age ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 white 4.25 50.5 ## 2 black 2.45 46.0 ## 3 other 3.61 43.3 With respect to politics - just as we expected! People who identify as white also tend to be a bit older on average than people who identify as black. Instead of just looking at the averages, we could visualize them using a simple barplot. We will use the ggplot function for this, which is one of the most useful suite of functions for visualization in all of R. ggplot(vars_by_race, aes(x=race, y=partyid, fill=race)) + geom_bar(stat=&quot;identity&quot;) It is a complex function, so let’s break it down. The first argument is the data we want to visualize itself - vars_by_race. Then we need to establish the aesthetics (i.e. aes()). x is the x variable (i.e. the variable on the x-axis of the graph), y is the y variable (i.e. the varible on the y axis of the graph), and fill is the variable we want to use to color the bars (race). Now that the aesthetics are established, we tell ggplot what kind of plot we want (geom_bar specifies a bar plot). And stat = “identity” means we want to graph the values as they are in the data we provided, rather than trying to do something else with them. Barplots are useful when you want to see the relationship between a continuous variable (like partyid) and a categorical variable (like race). But what if we have two continuous variables, like age and how many hours one works a week? We can use scatterplots for that! First, let’s return the data to its original state by ungrouping it. gss &lt;- gss %&gt;% ungroup() Now we can use geom_point, instead of bar, to plot the relationship between age and hours worked last week (hrs1). ggplot(data = gss, aes(x = age, y = hrs1)) + geom_point() ## Warning: Removed 973 rows containing missing values (geom_point). With geom_smooth(), we can add a best fit line to better understand the relationship. ggplot(data = gss, aes(x = age, y = hrs1)) + geom_point() + geom_smooth() Pretty flat, with a bit of a decrease after age 50, and a weird uptick around 100 years old… perhaps that is just noise? Let’s filter out the really old people from the data. It is simple using the filter command. All we have to specify is that we want people of age less than 80, like so. gss_younger &lt;- gss %&gt;% filter(age &lt; 80) geom_smooth() Now we replot the data, except we have to change the name of the data we are using to gss_younger! ggplot(data = gss_younger, aes(x = age, y = hrs1)) + geom_point() + geom_smooth() We can add in another variable using color, if we want. Coloring by sex, for example, reveals remaining discrepencies in workforce participation between males and females, though there is a lot of overlap, and much more than we would have seen twenty years ago. ggplot(data = gss, aes(x = age, y = hrs1, color = sex)) + geom_point() "],["surveys-and-survey-experiments-with-qualtrics.html", "Week 2 Surveys and Survey Experiments with Qualtrics 2.1 Overview 2.2 Creating a Qualtrics account 2.3 Survey options 2.4 A quick survey experiment 2.5 Publish it!", " Week 2 Surveys and Survey Experiments with Qualtrics This section is drafted based on Dr. Mark Hoffman’s previous SOC 10 lab notes. 2.1 Overview In this week, we will go from using data that someone else collected to collecting data of our own using Qualtrics. Qualtrics makes collecting survey data online easy. If you have ever used something like Google Forms, it is, in many respects, quite similar, except that it is much more powerful. As you will see, we can quickly and easily build a survey experiment, administer the experiment, download the results, and import them into R. Let’s get started! 2.2 Creating a Qualtrics account Stanford is kind enough to provide all of us with access to Qualtrics. Click here to get started. Click on the “Set up a Qualtrics account” button and it will tell you to go to https://stanforduniversity.qualtrics.com. Go to that link! There, it will ask if you have a preexisting Qualtrics account or not. Click the button that pertains to you. If you don’t have a preexisting account, it will either prompt you to log-in to your Stanford account via WebAuth, or else it will automatically log-in for you and set up your account if you are already logged in. Now you should be into Qualtrics! Since you haven’t made a project previously, you only have one option: Create a new project (bottom left). Everytime you want to make a new survey you will click this button. We will make an example survey to show you the ropes. It will bring you to a page with a bunch of options for creating a new survey. You can start from these pre-designed surveys if they fall in line with the kind of survey you want to run. There are even pre-built surveys for academics. For learning purposes though, we will start from scratch by clicking “From Scratch–Survey”. Now it asks us to name our project. I called it First Survey. ## Building a survey With a project created, we have been ported to Qualtric’s main user interface, where we can build a survey. Have a look around at all of the different options. Qualtrics is full of tools for creating your ideal survey, but at times that functionality can be a bit overwhelming. We will start simple. Let’s start by learning how to add a question to our survey. Click the menue under “Question type” on the left and select “Text entry”. There are a bunch of options and I recommend experimenting/reading up on all of them. The most essential are Text Entry, Multiple Choice, and Matrix Table. Our first question will use Text Entry. It allows us to ask a question and then have the user put in any value that they like. Multiple Choice on the other hand would let us specify the answers they can provide. For a question like – How old are you? – there are too many potential responses for multiple choice to work well, so text entry will do. We can change the text at the top of the question box to specify the question the respondent should answer: Let’s for example ask “How old are you?” Next let’s make a more complicated multiple choice question using the matrix table. It basically allows you to ask multiple multiple choice questions at once. Let’s start by clicking the blue button “Add new question” and selecting the option “Matrix table”. For example, we can copy a question from the GSS about trust in institutions to see the extent to which our respondents trust different groups, like their family or the government. Cool! Maybe trust of this sort varies by income - we might expect rich people to support institutions more than the poor, for example, because they have historically benefitted from them. If we want to put the income question after age, we can simply drag it upwards so that it comes before the question on trust. We don’t have to come up with all of the questions ourselves - Qualtrics has a question bank that you can use to find pre-written questions. Just click on the “Import from library” button at the bottom of the page. I here import one on education level from the US demographics library. 2.3 Survey options At the bottom, we could add more question blocks (we will skip for now) and edit your end of survey message. You can customize it by scrolling down the options under “Messaging” on the left. Now let’s preview our min-survey by clicking “Preview” button on the top! 2.4 A quick survey experiment To set up a survey experiment, we have to set up a block of questions from which respondents will only get one of the N questions in the block. This selection is randomized, so that we can see how the randomization affects their responses. Here is a quick example. First add a new block. Now we have two blocks. Now add the two different versions of the survey prompt to the block. The last step is to make sure that the questions from this block are sampled randomly for each respondent, and that only one of these questions will be selected. We can achieve this by editing the block’s options. Click the block and select the Question Randomization option one the left. This should pull up the Question Randomization menu. We can choose: no randomization, to randomize the order of questions, or to randomly select N questions from the block to present to the respondent. Select the last optin and set the number to 1 and we will have our first survey experiment. 2.5 Publish it! Now we can either preview again to double check or publish the survey! Once it is published, we can distribute it to respondents. We could do this on Mechanical Turk, as we will learn in a later class, or we can just send it to our friends. To do that click on the “Distributions” tab at the top of the survey. It will ask how you want to distribute your survey. You can do it by email, or by my preferred way, which is to “Get a single reusable link” which you can send to anyone who you want to take your survey. You can also generate a trackable link for each respondent if you want to keep track of who responded. When someone responds to your survey, inside the Data and Analysis pane in Qualtrics, you should see a response! We can export it using the “Export &amp; Import” data button and then clicking Export Data. Export it as a .csv because those files are super easy to load into R. It will download a .zip file to your computer. Once you unzip it, you will be able to load the resulting file into R. First, I would rename it, so that it is easy to input into R. I called the file trial_survey.csv. Drag it to your R project and then you can load it into R using the read.csv() function. Simple! survey &lt;- read.csv(&quot;Data/first_survey.csv&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
